@startuml


class Point{
    - x: double
    - y: double
    + Point(x: double, y: double)
    + getX(): double
    + getY(): double
    + clone(): Point
    + moveX(delta: double): double
    + moveY(delta: double): double
}

class Line {
    - pointA: Point
    - pointB: Point
    + Line(pointA: Point, pointB: Point)
    + getPointA(): Point
    + getPointB(): Point
    + getSlope(): double
    + getLength(): double
    + translate(deltaX: double, deltaY: double): void
}

abstract class Shape {
    - points: List<Point>
    + {abstract} getArea(): double
    + getPoints(): List<Point>
    + translate(deltaX: double, deltaY: double): void
}

class Rectangle {
    + Rectangle(points: List<Point>)
    + getArea(): double
}

class Square {
    + Square(points: List<Point>)
}

class Ellipse {
    - radiusX: double
    - radiusY: double
    + Ellipse(point: Point, radiusX: double, radiusY: double)
    + getArea(): double
    + getRadiusX(): double
    + getRadiusY(): double
}

class Circle {
    + Circle(point: Point, radius: double)
}

class Triangle {
    + Triangle(points: List<Point>)
    + getArea(): double
}

Shape "1" --* "1..*" Point
Line "1" --* "2" Point
Rectangle --|> Shape
Square --|> Rectangle
Ellipse --|> Shape
Circle --|> Ellipse
Triangle --|> Shape

@enduml